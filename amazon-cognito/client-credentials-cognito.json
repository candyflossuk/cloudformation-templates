"AWSTemplateFormatVersion" : "2010-09-09",
"Description" : "

A template to create a simple cognito user pool that uses
client credentials to authenticate. The template includes one app client
to demonstrate how to set up app clients in cloudformation, including app
client settings.

The cloudformation template also includes the required resources to set up
an Amazon Cognito Domain using your own domain name -
i.e AWS managed certificate

A resource server is also defined that uses the domain name configured as part
of the Amazon Cognito Domain set up. This allows you to define the resource
servers and custom scopes for OAuth flows

This template is not a fully fleshed out production ready resource by any means
it is meant as a bootsrapping tool to spin up a cognito pool quickly. Care should
be taken when building your cognito pool to ensure it has all the security features
you and your business are looking for.
"
"Parameters": {
  "UserPoolName": {
    "Type": "String",
    "Default": "DefaultUserPoolName",
    "Description": "The name that will be used when creating the Cognito user
    pool in the cloudformation stack"
  },
  "AppClientName": {
    "Type": "String",
    "Default": "DefaultAppClientName",
    "Description": "The name given to the app client name provided as part of
    this cloudformation template"
  },
  "UserPoolResourceServerIdentifer": {
    "Type": "String",
    "Default": "https://enter.api.address.here.com/Prod",
    "Description": "The resource server identifer given to the user pool,
    typically the subdomain you want to use as the root of your resource
    server scope"
  },
  "UserPoolResourceServerFriendlyName": {
    "Type": "String",
    "Default": "Default Friendly Name For Resurce Server",
    "Description": "A friendly name for the resource server that makes it
    easier to identify what the resource server is referring to"
  },
  "AWSManagedCertificateARN": {
    "Type": "String",
    "Default": "SomeAWSManagedCertificateARN",
    "Description": "The certificate ARN to be used for the Cognito pool"
  },
  "ParameterName2": {
    "Type": "String",
    "Default": "",
    "AllowedValues": ["",""]
    "Description": "Enter description here"
  },
}

"Resources" : {
  "CognitoUserPool":
    {
    "Type" : "AWS::Cognito::UserPool",
    "Properties" : {
        "UserPoolName" : { "Ref": "UserPoolName" },
        "UserPoolTags" : { "sample_tag_key": "sample_tag_value" },
      }
  },
  "UserPoolClientOne":
    {
    "Type" : "AWS::Cognito::UserPoolClient",
    "Properties" : {
        "AllowedOAuthFlows" : [ "client_credentials" ],
        "AllowedOAuthScopes" : [ {"Ref": "UserPoolResourceServerOne"} ],
        "ClientName" : { "Ref": "AppClientName"},
        "ExplicitAuthFlows" : ["ALLOW_REFRESH_TOKEN_AUTH"],
        "GenerateSecret" : true,
        "PreventUserExistenceErrors" : "ENABLED",
        "RefreshTokenValidity" : 30,
        "SupportedIdentityProviders" : ["COGNITO"],
        "UserPoolId" : {"Ref": "CognitoUserPool"},
      }
  },
  "UserPoolDomain":
    {
    "Type" : "AWS::Cognito::UserPoolDomain",
    "Properties" : {
        "CustomDomainConfig" : {
          "CertifateArn": {"Ref": "AWSManagedCertificateARN"}
        },
        "Domain" : "subdomainName",
        "UserPoolId" : {"Ref": "CognitoUserPool"}
      }
  },
  "UserPoolResourceServerOne":
    {
    "Type" : "AWS::Cognito::UserPoolResourceServer",
    "Properties" : {
        "Identifier" : {"Ref": "UserPoolResourceServerIdentifer"},
        "Name" : {"Ref": "UserPoolResourceServerFriendlyName"},
        "Scopes" : [
            {
              "ScopeDescription" : "OAUTH Scope Description",
              "ScopeName" : "OAUTH Scope Name i.e * or domain path"
            }],
        "UserPoolId" : {"Ref": "CognitoUserPool"}
      }
    }
  }
}
